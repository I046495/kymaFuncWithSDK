import { Field, StringFilterFunction, BooleanFilterFunction, FilterFunctionsType as FilterFunctionsCommonType, Time, FilterFunctionNames as FilterFunctionNamesCommon } from '@sap-cloud-sdk/odata-common/internal';
import BigNumber from 'bignumber.js';
import { DeSerializers } from './de-serializers';
import { Entity } from './entity';
/**
 * Build a filter function to test whether a string is a substring of the other. Evaluates to boolean.
 * @param substr - The substring to test for. This can either be a string, a reference to a field or another filter function.
 * @param str - The string to test. This can either be a string, a reference to a field or another filter function.
 * @returns The newly created filter function.
 */
export declare function substringOf<EntityT extends Entity>(substr: string | Field<EntityT, boolean, boolean> | StringFilterFunction<EntityT>, str: string | Field<EntityT, boolean, boolean> | StringFilterFunction<EntityT>): BooleanFilterFunction<EntityT>;
/**
 * Build a filter function to replace the occurrence of a search string with another string. Evaluates to string.
 * @param str - The string to get the index from. This can either be a string, a reference to a field or another filter function.
 * @param searchStr - The substring to get the index for. This can either be a string, a reference to a field or another filter function.
 * @param replaceStr - The substring to get the index for. This can either be a string, a reference to a field or another filter function.
 * @returns The newly created filter function.
 */
export declare function replace<EntityT extends Entity>(str: string | Field<EntityT, boolean, boolean> | StringFilterFunction<EntityT>, searchStr: string | Field<EntityT, boolean, boolean> | StringFilterFunction<EntityT>, replaceStr: string | Field<EntityT, boolean, boolean> | StringFilterFunction<EntityT>): StringFilterFunction<EntityT>;
/**
 * Export length filter function for backwards compatibility.
 */
export declare const length: typeof import("@sap-cloud-sdk/odata-common/internal").length;
/**
 * Export substring filter function for backwards compatibility.
 */
export declare const substring: typeof import("@sap-cloud-sdk/odata-common/internal").substring;
/**
 * OData v2 specific filter functions.
 * @param deSerializers - DeSerializer used in the filter.
 * @returns Filter functions object.
 */
export declare function filterFunctions<BinaryT = string, BooleanT = boolean, ByteT = number, DecimalT = BigNumber, DoubleT = number, FloatT = number, Int16T = number, Int32T = number, Int64T = BigNumber, GuidT = string, SByteT = number, SingleT = number, StringT = string, AnyT = any, DateTimeT = moment.Moment, DateTimeOffsetT = moment.Moment, TimeT = Time>(deSerializers?: Partial<DeSerializers<BinaryT, BooleanT, ByteT, DecimalT, DoubleT, FloatT, Int16T, Int32T, Int64T, GuidT, SByteT, SingleT, StringT, AnyT, DateTimeT, DateTimeOffsetT, TimeT>>): FilterFunctionsType;
/**
 * Extending the common filter function by the OData v2 specific ones`substringOf` and `replace`.
 */
export type FilterFunctionsType = FilterFunctionsCommonType & {
    substringOf: typeof substringOf;
    replace: typeof replace;
};
/**
 * @internal
 */
export type FilterFunctionNames = FilterFunctionNamesCommon | 'substringOf' | 'replace';
