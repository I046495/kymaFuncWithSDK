import { OperationRequestBuilderBase, ODataRequestConfig, OperationParameters } from '@sap-cloud-sdk/odata-common/internal';
import { DeSerializers } from '../de-serializers';
/**
 * Create OData request to execute an operation.
 * @typeParam ParametersT - Type of the operation parameters.
 * @typeParam ReturnT - Type of the operation return value.
 */
export declare class OperationRequestBuilder<DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends OperationRequestBuilderBase<DeSerializersT, ReturnT, ODataRequestConfig> {
    readonly responseTransformer: (data: any) => ReturnT;
    /**
     * Creates an instance of OperationRequestBuilder.
     * @param defaultBasePath - Default base path for the service the operation belongs to.
     * @param operationName - The name of the operation.
     * @param responseTransformer - Transformation function for the response.
     * @param parameters - Parameters to be set in the operation.
     * @param deSerializers - (De-)serializers used for transformation.
     * @param type - Type of operation, whether it is a function or an action.
     */
    constructor(defaultBasePath: string, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT, type: 'function' | 'action');
}
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
export declare class FunctionImportRequestBuilder<DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends OperationRequestBuilder<DeSerializersT, ParametersT, ReturnT> {
    readonly responseTransformer: (data: any) => ReturnT;
    constructor(defaultBasePath: string, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT);
}
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
export declare class ActionImportRequestBuilder<DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends OperationRequestBuilder<DeSerializersT, ParametersT, ReturnT> {
    readonly responseTransformer: (data: any) => ReturnT;
    constructor(defaultBasePath: string, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT);
}
