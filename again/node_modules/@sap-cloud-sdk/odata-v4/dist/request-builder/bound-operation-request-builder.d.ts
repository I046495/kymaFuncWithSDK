import { OperationRequestBuilderBase, EntityApi, EntityBase, OperationParameters } from '@sap-cloud-sdk/odata-common/internal';
import { DeSerializers } from '../de-serializers';
import { ODataBoundActionRequestConfig, ODataBoundFunctionRequestConfig } from '../request';
/**
 * Create bound OData request to execute an operation.
 * @typeParam ParametersT - Type of the operation parameters.
 * @typeParam ReturnT - Type of the operation return value.
 */
export declare class BoundOperationRequestBuilder<EntityT extends EntityBase, DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends OperationRequestBuilderBase<DeSerializersT, ReturnT, ODataBoundFunctionRequestConfig<EntityT, DeSerializersT, ParametersT> | ODataBoundActionRequestConfig<EntityT, DeSerializersT, ParametersT>> {
    readonly responseTransformer: (data: any) => ReturnT;
    constructor(entityApi: EntityApi<EntityT, DeSerializersT>, entity: EntityT, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT, type: 'function' | 'action');
}
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
export declare class BoundFunctionImportRequestBuilder<EntityT extends EntityBase, DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends BoundOperationRequestBuilder<EntityT, DeSerializersT, ParametersT, ReturnT> {
    readonly responseTransformer: (data: any) => ReturnT;
    constructor(entityApi: EntityApi<EntityT, DeSerializersT>, entity: EntityT, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT);
}
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
export declare class BoundActionImportRequestBuilder<EntityT extends EntityBase, DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends BoundOperationRequestBuilder<EntityT, DeSerializersT, ParametersT, ReturnT> {
    readonly responseTransformer: (data: any) => ReturnT;
    constructor(entityApi: EntityApi<EntityT, DeSerializersT>, entity: EntityT, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT);
}
