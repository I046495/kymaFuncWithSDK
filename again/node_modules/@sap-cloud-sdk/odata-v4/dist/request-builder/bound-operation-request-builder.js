"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BoundActionImportRequestBuilder = exports.BoundFunctionImportRequestBuilder = exports.BoundOperationRequestBuilder = void 0;
// eslint-disable-next-line max-classes-per-file
const internal_1 = require("@sap-cloud-sdk/odata-common/internal");
const request_1 = require("../request");
const uri_conversion_1 = require("../uri-conversion");
/**
 * Create bound OData request to execute an operation.
 * @typeParam ParametersT - Type of the operation parameters.
 * @typeParam ReturnT - Type of the operation return value.
 */
class BoundOperationRequestBuilder extends internal_1.OperationRequestBuilderBase {
    constructor(entityApi, entity, operationName, responseTransformer, parameters, deSerializers, type) {
        const requestConfig = type === 'function'
            ? new request_1.ODataBoundFunctionRequestConfig('get', entityApi, operationName, parameters, (0, uri_conversion_1.createODataUri)(deSerializers))
            : new request_1.ODataBoundActionRequestConfig(entityApi, operationName, parameters, (0, uri_conversion_1.createODataUri)(deSerializers));
        super(responseTransformer, requestConfig, deSerializers);
        this.responseTransformer = responseTransformer;
        this.requestConfig.keys = this.requestConfig.oDataUri.getEntityKeys(entity, entityApi);
    }
}
exports.BoundOperationRequestBuilder = BoundOperationRequestBuilder;
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
class BoundFunctionImportRequestBuilder extends BoundOperationRequestBuilder {
    constructor(entityApi, entity, operationName, responseTransformer, parameters, deSerializers) {
        super(entityApi, entity, operationName, responseTransformer, parameters, deSerializers, 'function');
        this.responseTransformer = responseTransformer;
    }
}
exports.BoundFunctionImportRequestBuilder = BoundFunctionImportRequestBuilder;
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
class BoundActionImportRequestBuilder extends BoundOperationRequestBuilder {
    constructor(entityApi, entity, operationName, responseTransformer, parameters, deSerializers) {
        super(entityApi, entity, operationName, responseTransformer, parameters, deSerializers, 'action');
        this.responseTransformer = responseTransformer;
    }
}
exports.BoundActionImportRequestBuilder = BoundActionImportRequestBuilder;
//# sourceMappingURL=bound-operation-request-builder.js.map