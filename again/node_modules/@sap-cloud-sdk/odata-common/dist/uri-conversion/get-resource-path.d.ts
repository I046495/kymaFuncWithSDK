import { EntityBase } from '../entity-base';
import { UriConverter } from '../de-serializers';
import { EntityApi } from '../entity-api';
type GetResourcePathForKeysType = <EntityT extends EntityBase>(keys: Record<string, any>, entityApi: EntityApi<EntityT, any>) => string;
interface GetResourcePathForKeys {
    getResourcePathForKeys: GetResourcePathForKeysType;
}
/**
 * Creates a getResourcePathForKeys function using the OData v2 or OData v4 URI converter.
 * The concrete instances for v2 or v4 are initiated in odata/v2/uri-conversion/odata-uri.ts and odata/v4/uri-conversion/odata-uri.ts.
 * @param uriConverter - Uri converter for v2 or v4.
 * @returns The filter getter. See {@link GetFilter}
 * @internal
 */
export declare function createGetResourcePathForKeys(uriConverter: UriConverter): GetResourcePathForKeys;
export {};
