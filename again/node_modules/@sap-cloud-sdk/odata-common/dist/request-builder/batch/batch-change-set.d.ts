import { DefaultDeSerializers, DeSerializers } from '../../de-serializers';
import { CreateRequestBuilderBase } from '../create-request-builder-base';
import { EntityBase } from '../../entity-base';
import { UpdateRequestBuilderBase } from '../update-request-builder-base';
import { DeleteRequestBuilderBase } from '../delete-request-builder-base';
import { OperationRequestBuilderBase } from '../operation-request-builder-base';
/**
 * Representation of a batch change set, which holds a collection of write operations.
 */
export declare class BatchChangeSet<DeSerializersT extends DeSerializers = DefaultDeSerializers> {
    readonly requests: ChangesetBuilderTypes<DeSerializersT>[];
    readonly boundary: string;
    /**
     * Create an instance of BatchChangeSet.
     * @param requests - Requests to combine to one change set.
     * @param boundary - Request boundary for separation of sub requests. Defaults to an auto generated value.
     */
    constructor(requests: ChangesetBuilderTypes<DeSerializersT>[], boundary?: string);
}
/**
 * Some function imports contain not serializable entities and the execute() method is removed from them.
 * Since the execute method is not needed in batch the execute it is removed from all function imports.
 */
export type ChangesetBuilderTypes<DeSerializersT extends DeSerializers> = CreateRequestBuilderBase<EntityBase, DeSerializersT> | UpdateRequestBuilderBase<EntityBase, DeSerializersT> | DeleteRequestBuilderBase<EntityBase, DeSerializersT> | Omit<OperationRequestBuilderBase<any, any, any>, 'execute'>;
