import { DeSerializers } from '../de-serializers';
import { EntityBase } from '../entity-base';
import type { GetAllRequestBuilderBase } from '../request-builder';
import { ODataRequestConfig } from './odata-request-config';
/**
 * OData count request configuration for an entity type.
 * @typeParam EntityT - Type of the entity to setup a request for
 */
export declare class ODataCountRequestConfig<EntityT extends EntityBase, DeSerializersT extends DeSerializers> extends ODataRequestConfig {
    readonly getAllRequest: GetAllRequestBuilderBase<EntityT, DeSerializersT>;
    /**
     * Creates an instance of ODataGetAllRequestConfig.
     * @param getAllRequest - Get all request builder to count result for.
     */
    constructor(getAllRequest: GetAllRequestBuilderBase<EntityT, DeSerializersT>);
    resourcePath(): string;
    queryParameters(): Record<string, any>;
}
