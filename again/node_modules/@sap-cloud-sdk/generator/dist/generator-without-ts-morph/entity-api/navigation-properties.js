"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.navigationPropertyTypes = exports.addNavigationPropertyFieldsFunction = exports.navigationPropertyFieldsVariable = void 0;
const util_1 = require("@sap-cloud-sdk/util");
const generator_utils_1 = require("../../generator-utils");
const typedoc_1 = require("../../typedoc");
const match_entity_1 = require("./match-entity");
/**
 * @internal
 */
function navigationPropertyFieldsVariable(entity, service) {
    return (0, util_1.codeBlock) `private navigationPropertyFields!: {
    ${navigationPropertyTypes(entity, service).join(',\n')}
  };`;
}
exports.navigationPropertyFieldsVariable = navigationPropertyFieldsVariable;
/**
 * @internal
 */
function addNavigationPropertyFieldsFunction(entity, service) {
    return (0, util_1.codeBlock) `_addNavigationProperties(
    linkedApis: [
      ${navigationPropertyApiTypes(entity, service).join(',')}
    ]): this {
      this.navigationPropertyFields = {
        ${navigationProperties(entity, service).join(',\n')}
      };
      return this;
    }`;
}
exports.addNavigationPropertyFieldsFunction = addNavigationPropertyFieldsFunction;
function navigationProperties(entity, service) {
    return entity.navigationProperties.map((navProp, i) => navigationProperty(navProp, service, i));
}
function navigationProperty(navProp, service, index) {
    return `${navProp.staticPropertyName}: new ${(0, generator_utils_1.linkClass)(navProp, service.oDataVersion)}(
    '${navProp.originalName}',
    this,
    linkedApis[${index}]
  )`;
}
/**
 * @internal
 */
function navigationPropertyTypes(entity, service) {
    return entity.navigationProperties.map(navProp => navigationPropertyType(navProp, entity, service));
}
exports.navigationPropertyTypes = navigationPropertyTypes;
function navigationPropertyType(navProp, entity, service) {
    const toEntity = (0, match_entity_1.matchEntity)(navProp, service).className;
    return [
        (0, util_1.documentationBlock) `${(0, typedoc_1.getStaticNavPropertyDescription)(navProp)}`,
        `${navProp.staticPropertyName}: ${(0, generator_utils_1.linkClass)(navProp, service.oDataVersion)}<
      ${entity.className}<DeSerializersT>,
      DeSerializersT,
      ${toEntity}Api<DeSerializersT>
    >`
    ].join('\n');
}
function navigationPropertyApiTypes(entity, service) {
    return entity.navigationProperties.map(navProp => navigationPropertyApiType(navProp, service));
}
function navigationPropertyApiType(navProp, service) {
    const toEntity = (0, match_entity_1.matchEntity)(navProp, service).className;
    return `${toEntity}Api<DeSerializersT>`;
}
//# sourceMappingURL=navigation-properties.js.map