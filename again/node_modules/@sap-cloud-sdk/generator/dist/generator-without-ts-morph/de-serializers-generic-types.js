"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGenericTypes = exports.getGenericTypesWithDefault = void 0;
/**
 * @internal
 */
function getGenericTypesWithDefault(oDataVersion) {
    return getGenericTypeAndDefault(oDataVersion)
        .map(typeAndDefault => `${typeAndDefault[0]} = ${typeAndDefault[1]}`)
        .join(',\n');
}
exports.getGenericTypesWithDefault = getGenericTypesWithDefault;
/**
 * @internal
 */
function getGenericTypes(oDataVersion) {
    return getGenericTypeAndDefault(oDataVersion)
        .map(typeAndDefault => typeAndDefault[0])
        .join(',\n');
}
exports.getGenericTypes = getGenericTypes;
function getGenericTypeAndDefault(oDataVersion) {
    const nonCommonGenericTypeAndDefault = oDataVersion === 'v4'
        ? [
            ['DateT', 'Moment'],
            ['DurationT', 'Duration'],
            ['TimeOfDayT', 'Time'],
            ['EnumT', 'any']
        ]
        : [
            ['DateTimeT', 'Moment'],
            ['TimeT', 'Time']
        ];
    return [...commonGenericTypeAndDefault, ...nonCommonGenericTypeAndDefault];
}
const commonGenericTypeAndDefault = [
    ['BinaryT', 'string'],
    ['BooleanT', 'boolean'],
    ['ByteT', 'number'],
    ['DecimalT', 'BigNumber'],
    ['DoubleT', 'number'],
    ['FloatT', 'number'],
    ['Int16T', 'number'],
    ['Int32T', 'number'],
    ['Int64T', 'BigNumber'],
    ['GuidT', 'string'],
    ['SByteT', 'number'],
    ['SingleT', 'number'],
    ['StringT', 'string'],
    ['AnyT', 'any'],
    ['DateTimeOffsetT', 'Moment']
    // ['DateTimeT', 'Moment'],//v2
    // ['TimeT', 'Time'], //v2
    // ['DateT', 'Moment'], //v4
    // ['DurationT', 'Duration'],//v4
    // ['TimeOfDayT', 'Time'] //v4
];
//# sourceMappingURL=de-serializers-generic-types.js.map