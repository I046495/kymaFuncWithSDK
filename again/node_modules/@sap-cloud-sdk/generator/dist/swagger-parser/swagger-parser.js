"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSwaggerDefinitionForOperation = exports.readSwaggerFile = void 0;
const fs_1 = require("fs");
const path_1 = __importDefault(require("path"));
/**
 * @internal
 */
function readSwaggerFile(swaggerPath) {
    const swaggerFile = (0, fs_1.readFileSync)(path_1.default.resolve(swaggerPath.toString()), {
        encoding: 'utf-8'
    });
    return parseSwaggerFile(swaggerFile);
}
exports.readSwaggerFile = readSwaggerFile;
function parseSwaggerFile(swaggerFile) {
    const swaggerMetaData = JSON.parse(swaggerFile);
    // Get definitions from schema in case there are no definitions present, this is typically the case for openapi files (version >= 3.0.0)
    swaggerMetaData.definitions =
        swaggerMetaData.definitions || swaggerMetaData?.components?.schemas;
    return swaggerMetaData;
}
/**
 * @internal
 */
function getSwaggerDefinitionForOperation(originalName, httpMethod, swaggerMetadata) {
    if (swaggerMetadata) {
        const paths = swaggerMetadata.paths;
        const entryPath = Object.keys(paths).find(p => p === `/${originalName}`);
        if (entryPath) {
            const key = Object.keys(paths[entryPath]).find(k => k.toLowerCase() === httpMethod.toLowerCase());
            if (key) {
                return paths[entryPath][key];
            }
        }
    }
}
exports.getSwaggerDefinitionForOperation = getSwaggerDefinitionForOperation;
//# sourceMappingURL=swagger-parser.js.map