import type { EdmxProperty } from '../edmx-parser/common/edmx-types';
import type { EdmxMetadata } from '../edmx-parser/edmx-file-reader';
import type { EdmxFunctionImportV2 } from '../edmx-parser/v2/edm-types';
import type { VdmComplexType, VdmEnumType, VdmMappedEdmType } from '../vdm-types';
import type { EdmxJoinedOperation } from './v4';
/**
 * @internal
 */
export declare function stripNamespace(name: string): string;
/**
 * @internal
 */
export declare function isCollectionType(typeName: string): boolean;
/**
 * @internal
 */
export declare function isEdmType(typeName: string): boolean;
/**
 * @internal
 */
export declare function complexTypeName(type: string): string | undefined;
/**
 * @internal
 */
export declare const collectionRegExp: RegExp;
/**
 * @internal
 */
export declare function parseTypeName(typeName: string): string;
/**
 * @internal
 */
export declare function parseCollectionTypeName(typeName: string): string;
/**
 * @internal
 */
export declare function isV2Metadata(metadata: EdmxMetadata): boolean;
/**
 * @internal
 */
export declare function isComplexTypeOrEnumType(typeName: string): boolean;
/**
 * @internal
 */
export declare function isComplexType(name: string, complexTypes: VdmComplexType[]): boolean;
/**
 * @internal
 */
export declare function isEnumType(name: string, enumTypes: VdmEnumType[]): boolean;
/**
 * @internal
 */
export declare function checkCollectionKind(property: EdmxProperty): void;
/**
 * @internal
 */
export declare function complexTypeFieldType(typeName: string): string;
/**
 * @internal
 */
export declare function getTypeMappingActionFunction(typeName: string): VdmMappedEdmType;
/**
 * @internal
 */
export declare function typesForCollection(typeName: string, enumTypes: VdmEnumType[], complexTypes?: VdmComplexType[], formattedTypes?: Record<string, any>): VdmMappedEdmType;
/**
 * @internal
 */
export declare const propertyJsType: (type: string) => string | undefined;
/**
 * @internal
 */
export declare function hasUnsupportedParameterTypes(operation: EdmxJoinedOperation | EdmxFunctionImportV2): boolean;
/**
 * @internal
 */
export declare const findComplexType: (name: string, complexTypes: VdmComplexType[]) => VdmComplexType | undefined;
/**
 * @internal
 */
export declare const findEnumType: (name: string, enumTypes: VdmEnumType[]) => VdmEnumType | undefined;
/**
 * @internal
 */
export declare function complexTypeForName(name: string, complexTypes: VdmComplexType[]): string;
/**
 * @internal
 */
export declare function complexTypeFieldForName(name: string, complexTypes: VdmComplexType[]): string;
/**
 * @internal
 */
export declare function enumTypeForName(name: string, enumTypes: VdmEnumType[]): string;
