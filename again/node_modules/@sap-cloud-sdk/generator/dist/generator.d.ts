import { Project } from 'ts-morph';
import { GeneratorOptions, ParsedGeneratorOptions } from './options';
import { VdmServiceMetadata } from './vdm-types';
/**
 * Main entry point for the OData client generation.
 * Generates models and API files.
 * @param options - Options to configure generation.
 */
export declare function generate(options: GeneratorOptions & {
    config?: string;
}): Promise<void>;
/**
 * @internal
 * @param projectAndServices - Generated project with services.
 * @returns An error message with a recommendation to install specific SDK packages.
 */
export declare function getInstallODataErrorMessage(projectAndServices: ProjectAndServices): string;
/**
 * @internal
 */
export declare function transpileDirectories(directories: string[], options: ParsedGeneratorOptions): Promise<void[]>;
/**
 * @internal
 */
export declare function generateProject(options: ParsedGeneratorOptions): Promise<ProjectAndServices | undefined>;
/**
 * @internal
 */
export interface ProjectAndServices {
    /**
     * @internal
     */
    project: Project;
    /**
     * @internal
     */
    services: VdmServiceMetadata[];
}
/**
 * @internal
 */
export declare function generateSourcesForService(service: VdmServiceMetadata, project: Project, options: ParsedGeneratorOptions): Promise<void>;
