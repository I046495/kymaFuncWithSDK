"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readme = void 0;
const util_1 = require("@sap-cloud-sdk/util");
const internal_1 = require("@sap-cloud-sdk/generator-common/internal");
const sdk_metadata_1 = require("../sdk-metadata");
function title(service) {
    return service.serviceOptions.packageName || service.speakingModuleName;
}
function serviceReference(service) {
    const ref = service.apiBusinessHubMetadata
        ? `[${service.speakingModuleName}](${service.apiBusinessHubMetadata.url})`
        : service.speakingModuleName;
    return ref;
}
function communicationScenarioLine(service) {
    return service.apiBusinessHubMetadata &&
        service.apiBusinessHubMetadata.communicationScenario
        ? [
            `This service is part of the following communication scenarios: ${service.apiBusinessHubMetadata.communicationScenario}.`
        ]
        : [];
}
function businessDocumentationLine(service) {
    return service.apiBusinessHubMetadata &&
        service.apiBusinessHubMetadata.businessDocumentationUrl
        ? [
            `You can find additional documentation for this service on [help.sap.com](${service.apiBusinessHubMetadata.businessDocumentationUrl}).`
        ]
        : [];
}
/**
 * @internal
 */
function readme(service) {
    return [
        `# ${title(service)}`,
        '',
        `This package contains the OData VDM for the ${serviceReference(service)}.`,
        ...communicationScenarioLine(service),
        ...businessDocumentationLine(service),
        '',
        ...addUsageExample(service),
        ...(0, internal_1.helpfulLinksSection)(),
        ''
    ].join(util_1.unixEOL);
}
exports.readme = readme;
function addUsageExample(service) {
    const usageText = (0, sdk_metadata_1.getApiSpecificUsage)(service);
    if (usageText) {
        return [`## ${internal_1.usageHeaderText}`, '```', `${usageText}`, '```', ''];
    }
    return [];
}
//# sourceMappingURL=readme.js.map