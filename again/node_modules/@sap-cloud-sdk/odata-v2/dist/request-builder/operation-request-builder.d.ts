import { OperationParameters, RequestMethodType, OperationRequestBuilderBase } from '@sap-cloud-sdk/odata-common/internal';
import { DeSerializers } from '../de-serializers';
import { ODataFunctionRequestConfig } from '../request';
/**
 * Create OData request to execute an operation.
 * For v2, only function, but not action, is supported.
 * @typeParam ParametersT - Type of the function import parameters.
 * @typeParam ReturnT - Type of the function import return value.
 */
export declare class OperationRequestBuilder<DeSerializersT extends DeSerializers, ParametersT, ReturnT> extends OperationRequestBuilderBase<DeSerializersT, ReturnT, ODataFunctionRequestConfig<DeSerializersT, ParametersT>> {
    readonly responseTransformer: (data: any) => ReturnT;
    /**
     * Creates an instance of OperationRequestBuilder.
     * @param method - HTTP method to be used for the request.
     * @param defaultBasePath - Default base path for the service the operation belongs to.
     * @param operationName - The name of the operation.
     * @param responseTransformer - Transformation function for the response.
     * @param parameters - Parameters to be set in the operation.
     * @param deSerializers - (De-)serializers used for transformation.
     */
    constructor(method: RequestMethodType, defaultBasePath: string, operationName: string, responseTransformer: (data: any) => ReturnT, parameters: OperationParameters<ParametersT>, deSerializers: DeSerializersT);
}
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
export declare const FunctionImportRequestBuilder: typeof OperationRequestBuilder;
