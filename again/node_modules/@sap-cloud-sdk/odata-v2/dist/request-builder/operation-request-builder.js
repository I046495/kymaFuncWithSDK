"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FunctionImportRequestBuilder = exports.OperationRequestBuilder = void 0;
const internal_1 = require("@sap-cloud-sdk/odata-common/internal");
const request_1 = require("../request");
const uri_conversion_1 = require("../uri-conversion");
/**
 * Create OData request to execute an operation.
 * For v2, only function, but not action, is supported.
 * @typeParam ParametersT - Type of the function import parameters.
 * @typeParam ReturnT - Type of the function import return value.
 */
class OperationRequestBuilder extends internal_1.OperationRequestBuilderBase {
    /**
     * Creates an instance of OperationRequestBuilder.
     * @param method - HTTP method to be used for the request.
     * @param defaultBasePath - Default base path for the service the operation belongs to.
     * @param operationName - The name of the operation.
     * @param responseTransformer - Transformation function for the response.
     * @param parameters - Parameters to be set in the operation.
     * @param deSerializers - (De-)serializers used for transformation.
     */
    constructor(method, defaultBasePath, operationName, responseTransformer, parameters, deSerializers) {
        super(responseTransformer, new request_1.ODataFunctionRequestConfig(method, defaultBasePath, operationName, parameters, (0, uri_conversion_1.createODataUri)(deSerializers)), deSerializers);
        this.responseTransformer = responseTransformer;
    }
}
exports.OperationRequestBuilder = OperationRequestBuilder;
/**
 * @deprecated Since 3.3.0. Use {@link OperationRequestBuilder} instead.
 */
exports.FunctionImportRequestBuilder = OperationRequestBuilder;
//# sourceMappingURL=operation-request-builder.js.map