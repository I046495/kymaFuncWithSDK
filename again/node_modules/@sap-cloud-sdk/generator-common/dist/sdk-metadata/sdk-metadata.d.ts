import { Client, MultiLineText, ServiceStatus } from './sdk-metadata-types';
/**
 * @internal
 */
export declare function getSdkMetadataFileNames(originalFileName: string): {
    clientFileName: string;
};
/**
 * @internal
 */
export declare function getSdkMetadataClient(apiSpecificUsage: MultiLineText, generatorVersion: string, apiType: 'OData' | 'OpenAPI'): Promise<Client>;
/**
 * Gets the closest matching object using Levenshtein distance algorithm.
 * @param name - Name of the service or api class.
 * @param objectsToCheck - List of objects, e.g. VdmEntity, FunctionImports, etc.
 * @param extractorFn - Function to get the object's property to match against name.
 * @returns - closest matched object or undefined if not found.
 * @internal
 */
export declare function getLevenshteinClosest<T>(name: string, objectsToCheck: T[], extractorFn: (x: T) => string): T | undefined;
/**
 * @internal
 */
export declare const ServiceStatusValues: Record<ServiceStatus['status'], ServiceStatus>;
