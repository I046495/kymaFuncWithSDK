"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseCmdArgsBuilder = void 0;
const yargs_1 = __importDefault(require("yargs"));
const options_parser_1 = require("./options-parser");
/**
 * @internal
 * @param options Options to build the parseCmdArgs function for either OData or OpenApi.
 */
function parseCmdArgsBuilder(options) {
    return function parseCmdArgs(argv) {
        const command = (0, yargs_1.default)(argv)
            .command('$0', options.commandText)
            .options((0, options_parser_1.getOptionsWithoutDefaults)(options.cliOptions))
            .config()
            .alias('config', 'c')
            .alias('version', 'v')
            .alias('help', 'h')
            .strict(true)
            .parserConfiguration({
            'strip-aliased': true,
            'strip-dashed': true
        })
            .recommendCommands();
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const { _, $0, ...userOptions } = command.parseSync();
        return userOptions;
    };
}
exports.parseCmdArgsBuilder = parseCmdArgsBuilder;
//# sourceMappingURL=cli-parser.js.map