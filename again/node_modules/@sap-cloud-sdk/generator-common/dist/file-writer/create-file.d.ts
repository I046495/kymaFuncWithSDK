import { Options as PrettierOptions } from 'prettier';
/**
 * Options for the creation of a file.
 * @internal
 */
export interface CreateFileOptions {
    /**
     * Flag to indicate if the file is overwritten.
     */
    overwrite: boolean;
    /**
     * Path to the prettier config with respect to the process.cwd().
     */
    prettierOptions: PrettierOptions;
    /**
     * Flag to indicate if the file is formatted using prettier - Default is true.
     */
    usePrettier?: boolean;
}
/**
 * @internal
 */
export declare const defaultPrettierConfig: PrettierOptions;
/**
 * Read the prettier config and caches it.
 * @param prettierConfigPath - Path to the prettier config.
 * @returns Config or default.
 * @internal
 */
export declare function readPrettierConfig(prettierConfigPath: string | undefined): Promise<PrettierOptions>;
/**
 * This method considers also double dots like `.map.js`
 * @param fileName
 * @returns The complete file extension containing multiple dots
 * @internal
 */
export declare function getFileExtension(fileName: string): string;
/**
 * Write a file generated by the SAP Cloud SDK for JavaScript.
 * @param directoryPath - Path of the directory to write to.
 * @param fileName - Name of the file to write
 * @param content - Content to be written to the file. A copyright statement will be added to this.
 * @param overwrite - Whether or not existing files should be overwritten.
 * @param withCopyright - Whether the generated file contains the copyright information.
 * @internal
 */
export declare function createFile(directoryPath: string, fileName: string, content: string, options: CreateFileOptions): Promise<void>;
