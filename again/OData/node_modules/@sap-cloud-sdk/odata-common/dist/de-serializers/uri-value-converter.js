"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createUriConverter = exports.convertToUriForEdmString = exports.isInfOrNan = void 0;
/**
 * @internal
 */
function isInfOrNan(value) {
    if (typeof value === 'number') {
        return false;
    }
    return ['inf', '-inf', 'nan'].includes(value.toLowerCase());
}
exports.isInfOrNan = isInfOrNan;
/**
 * As per OData URL Syntax rules, single quotes within string literals must be represented as two consecutive single quotes.
 * encodeURIComponent does not encode single quotes on the high level get-filter and get-resource-path.
 * @internal
 */
function convertToUriForEdmString(value) {
    return `'${value.replace(/'/g, "''")}'`;
}
exports.convertToUriForEdmString = convertToUriForEdmString;
/**
 * @internal
 */
function createUriConverter(deSerializers) {
    return (value, edmType) => {
        const { serializeToUri, serialize } = deSerializers[edmType];
        return serializeToUri ? serializeToUri(value, serialize) : serialize(value);
    };
}
exports.createUriConverter = createUriConverter;
//# sourceMappingURL=uri-value-converter.js.map